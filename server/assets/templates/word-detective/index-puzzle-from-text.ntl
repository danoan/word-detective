<!DOCTYPE html>
<html>

<head>
  <meta charset='utf-8'>
  <meta http-equiv='X-UA-Compatible' content='IE=edge'>
  <title>Word Detective</title>
  <meta name='viewport' content='width=device-width, initial-scale=1'>
  <link rel='stylesheet' type='text/css' media='screen' href='/assets/css/master.css'>
  <link rel='stylesheet' type='text/css' media='screen' href='css/game-interface.css'>
  <script>
    let control;
    let refreshPuzzle;
  </script>
  <script type="module">
    import { config, main } from "./js/main.js";
    import { cookie_manager } from "./js/modules/cookie-manager.js";

    config.onload = function () {
      let div_hexagons = document.getElementById("container-hexagons");
      while (div_hexagons.childElementCount > 0) div_hexagons.removeChild(div_hexagons.childNodes[0]);
    }

    let today = new Date();
    let next_year = new Date(today.getTime() + 360 * 24 * 60 * 60 * 1000);

    config.words_found_cookie_id = 'puzzle_from_text_#checksum#_words_found';
    config.iso_expiration_date = next_year.toISOString();


    let cm = cookie_manager('puzzle_from_text_#checksum#_puzzle', config.iso_expiration_date);
    let cm_words_found = cookie_manager(config.words_found_cookie_id, config.iso_expiration_date);

    function load_assets(reset_cookie) {
      let assets = {
        "messages": null,
        "puzzle": null
      };

      let messages_json_location = "js/modules/word-detective/assets/english_messages.json";
      let assets_promise = fetch(messages_json_location)
        .then((response) => response.json())
        .then((response_json) => {
          assets.messages = response_json;
        });

      if (reset_cookie || cm.get() === '') {
        cm_words_found.set('');
        assets_promise = assets_promise
          .then(() => getPuzzle())
          .then((puzzle_json) => {
            cm.set(JSON.stringify(puzzle_json));
            assets.puzzle = puzzle_json;
          });
      } else {
        assets.puzzle = JSON.parse(cm.get());
      }

      return assets_promise
        .then(() => new Promise(function (resolve) {
          resolve(assets);
        }));
    }

    function getPuzzle() {
      let text = `#text#`;
      const formData = new FormData();
      formData.append('text', new Blob([text]));

      return fetch('/api/puzzle-from-file', {
        method: 'POST', // *GET, POST, PUT, DELETE, etc.
        mode: 'cors', // no-cors, *cors, same-origin
        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
        credentials: 'same-origin', // include, *same-origin, omit
        headers: {
          'Content-Type': 'multipart/form-data'
        },
        redirect: 'follow', // manual, *follow, error
        referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
        body: formData // body data type must match "Content-Type" header
      })
        .then(response => response.json())
        .then(puzzleJson => new Promise(function (resolve, error) {
          resolve(puzzleJson.puzzle);
        }))
        .catch(() => {
          throw new Error("Error in puzzle generation")
        });
    }

    function _refreshPuzzle(reset_cookie = true) {
      config.load_assets = () => load_assets(reset_cookie);
      main().then(control_handler => {
        control = control_handler;
      }).catch(error => alert(error));
    }

    _refreshPuzzle(false);
    refreshPuzzle = _refreshPuzzle;

  </script>
</head>

<body>
  <div class="container-main">
    <div class="top-status">
      <span id="missing-words">Missing words:</span>
      <div id="refresh-puzzle" class="refresh-puzzle" onclick="refreshPuzzle()"></div>
      <div class="container-words">
        <div class="words-found">
          <ul id="words-list">
          </ul>
        </div>
      </div>

    </div>

    <div class="display-text" id="display-text"></div>

    <div class="container-hexagons" id="container-hexagons">
    </div>

    <div class="container-buttons">
      <div class="button button-inline" onclick="control.erase_letter()">Erase</div>
      <div class="button button-inline" onclick="control.hint()">Hint</div>
      <div class="button button-inline" onclick="control.check_word()">Check</div>
    </div>

    <div class="bottom-status" id="bottom-status">

    </div>

    <div id="evidence-list" class="evidence-list slide-deck">
      <div class="slide word-selection" id="slide-1">
        <h1>Puzzle words</h1>
        <h2>(Select up to 3 words to get their definitions)</h2>
        <ul id="evidence-list-words">
        </ul>
      </div>
      <div class="slide word-definition" id="slide-2">
        <h1></h1>
        <h2></h2>
        <h3><a href="https://www.collinsdictionary.com">Source: Collins Dictionary</a></h3>
      </div>
      <div class="slide word-definition" id="slide-3">
        <h1></h1>
        <h2></h2>
        <h3><a href="https://www.collinsdictionary.com">Source: Collins Dictionary</a></h3>
      </div>
      <div class="slide word-definition" id="slide-4">
        <h1></h1>
        <h2></h2>
        <h3><a href="https://www.collinsdictionary.com">Source: Collins Dictionary</a></h3>
      </div>
      <div class="slide word-definition" id="slide-5">
        <div class="final-message">Well done, champs!</div>
      </div>
      <div id="slide-next-button" class="next"><span>></span></div>
    </div>
  </div>
  <div id="evidence-list-overlay" class="container-overlay"></div>
</body>

</html>